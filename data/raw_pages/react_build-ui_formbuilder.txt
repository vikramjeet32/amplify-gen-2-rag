Connected forms
Connected Forms are bound to a model in your app's data schema. Whenever a connected form is submitted, a record is automatically created or updated in the bound data model, with some or all of the form's input fields mapping to fields in the data model. Connected forms automatically work with any Amplify GraphQL API, and no
onSubmit
handling is required.
First, install the Amplify UI library.
To use connected forms, you first need to deploy a data model from your sandbox environment. We will use the same example as in the getting started
tutorial
.
To get started run the following command from your project root:
This will generate create and update forms for each model defined in your schema in a folder called
ui-components
.
In Gen 2, we automatically generate the form UI for you, which you can then customize and manage. If you decide to update your data model and need to regenerate the forms, please ensure you back up the original
ui-components
folder before executing the
npx ampx generate forms
command again.
In your application's entrypoint file (e.g.
src/index.js
for create-react-app or
src/main.jsx
for Vite), add the following imports and configuration
Copy
highlighted code example
import
'@aws-amplify/ui-react/styles.css'
;
import
{
ThemeProvider
}
from
'@aws-amplify/ui-react'
;
import
{
Amplify
}
from
'aws-amplify'
;
import
outputs
from
'./amplify_outputs.json'
;
Amplify
.
configure
(
outputs
)
;
In your application's entrypoint file (e.g.
src/main.jsx
for Vite), wrap the
<App />
component with the following:
Import your form by name. For a form named
TodoCreateForm
, you would use the following code:
Place your form in code. For a form named
ProductCreateForm
in a React project, you could use the following App code:
All connected and unconnected forms are either a
Create
form or an
Update
form.
Create forms render a form with empty inputs. If a create form is connected to a data model, will always generate a new record upon submission.
Update forms expect an input value in order to pre-populate the form.
For update forms that are connected to a data model, you can use the
id
prop, or the model prop:
id
prop: id string of the record you want to update. For example:
Model prop: if your form is bound to a data model named
Author
, your form will have a prop named
author
as well, which can receive a record. For example: