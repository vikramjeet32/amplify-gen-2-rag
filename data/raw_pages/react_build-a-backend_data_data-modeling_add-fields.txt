Add fields to data model
Amplify Data supports all AWS AppSync scalar types as field types. The following scalar types are available:
Sometimes, the built-in types do not meet the needs of your application. In those cases, you can specify custom types. You can either define the custom types inline or explicitly define the custom type in the schema.
Inline definition:
The "location" field will become a new non-model type that uses PascalCase, a naming convention in which the first letter of each word in a compound word is capitalized. If there are conflicts with another schema-level definition (model, custom type, enum), you will receive a Type error with a warning that you need to sift the value out as a separate item and use a "ref".
Explicit definition:
Specify the "Location" as
a.customType()
in your schema. To use the custom type, reference it through
a.ref()
in the respective field definitions.
To set or read the location field on the client side, you can expand a nested object and the type system will auto-infer the allowed values.
Enum has a similar developer experience as custom types: short-hand and long-form approaches.
Short-hand approach
Long-form approach
When creating a new item client-side, the enums are also type-enforced:
You can list available enum values client-side using the
client.enums.<ENUM_NAME>.values()
API. For example, this allows you to display the available enum values within a dropdown UI.
By default, fields are optional. To mark a field as required, use the
.required()
modifier.
Any field can be modified to be an array using the
.array()
modifier.
You can use the
.default(...)
modifier to specify a default value for optional
scalar type fields
. The
.default(...)
modifier is not available for custom types, arrays, or relationships.
Note:
The
.default(...)
modifier can't be applied to required fields.