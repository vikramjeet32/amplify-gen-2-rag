Connect to an external HTTP endpoint
The HTTP Datasource allows you to quickly configure HTTP resolvers within your Data API.
This guide will demonstrate how to establish a connection to an external REST API using an HTTP data source and use Amplify Data's custom mutations and queries to interact with the REST API.
For the purpose of this guide we will define a
Post
type and use an existing external REST API that will store records for it. In Amplify Gen 2,
customType
adds a type to the schema that is not backed by an Amplify-generated DynamoDB table.
With the
Post
type defined, it can then be referenced as the return type when defining your custom queries and mutations.
First, add the
Post
custom type to your schema:
To integrate the external REST API or HTTP API, you'll need to set it up as the HTTP Datasource. Add the following code in your
amplify/backend.ts
file.
Now that your REST API has been added as a data source, you can reference it in custom queries and mutations using the
a.handler.custom()
modifier which accepts the name of the data source and an entry point for your resolvers.
Use the following code examples to add
addPost
,
getPost
,
updatePost
, and
deletePost
as custom queries and mutations to your schema:
addPost
getPost
updatePost
deletePost
Next, create the following files in your
amplify/data
folder and use the code examples to define custom resolvers for the custom queries and mutations added to your schema from the previous step. These are AppSync JavaScript resolvers.
addPost
getPost
updatePost
deletePost
From your generated Data client, you can find all your custom queries and mutations under the client.queries. and client.mutations. APIs respectively.
addPost
getPost
updatePost
deletePost
In this guide, youâve added an external REST API as a HTTP data source to an Amplify Data API and defined custom queries and mutations, handled by AppSync JS resolvers, to manipulate Post items in an external REST API using the Amplify Gen 2 Data client.
To clean up, you can delete your sandbox by accepting the prompt when terminating the sandbox process in your terminal. Alternatively, you can also use the AWS Amplify console to manage and delete sandbox environments.