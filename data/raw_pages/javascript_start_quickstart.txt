Quickstart
ð Welcome to AWS Amplify! In this quickstart guide, you will:
Deploy a Vanilla JavaScript app with Vite
Build and connect to a database with real-time data updates
Configure authentication and authorization rules
Create a new Vanilla JavaScript app with vite using the following commands, create the directory (
amplify-js-app
) and files for the app.
Initialize npm and install dependencies and dev dependencies.
This runs a development server and allows you to see the output generated by the build. You can see the running app by navigating to
http://localhost:5173
.
Add the following to the
index.html
file:
Add the following to
style.css
file:
In
main.js
remove the boilerplate code and leave it empty. Then refresh the browser to see the changes.
The easiest way to get started with AWS Amplify is through npm with
create-amplify
command. You can run it from your base project directory.
Running this command will scaffold Amplify backend files in your current project with the following files added:
To make backend updates, we are going to require AWS credentials to deploy backend updates from our local machine.
Skip ahead to step 8
, if you already have an AWS profile with credentials on your local machine, and your AWS profile has the
AmplifyBackendDeployFullAccess
permission policy.
Otherwise,
set up local AWS credentials
that grant Amplify permissions to deploy backend updates from your local machine.
To deploy your backend use Amplify's per-developer cloud sandbox. This feature provides a separate backend environment for every developer on a team, ideal for local development and testing. To run your application with a sandbox environment, you can run the following command:
Once the sandbox environment is deployed, it will create a GraphQL API, database, and auth service. All the deployed resources will be available in the
amplify_outputs.json
.
The initial scaffolding already has a pre-configured data backend defined in the
amplify/data/resource.ts
file. The default example will create a Todo model with
content
field. Update your main.js file to create new to-do items.
That's it! You have successfully built a fullstack app on AWS Amplify. If you want to learn more about how to work with Amplify, here's the conceptual guide for
how Amplify works
.